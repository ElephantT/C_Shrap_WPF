<Window x:Class="lab19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:lab19"
        mc:Ignorable="d"
        Title="Круглое окно" Height="500" Width="900"
        AllowsTransparency="True" WindowStyle="None" Background="Transparent">
    <Window.Template>
        <ControlTemplate TargetType="Window">
            <Border Name="newBorder" CornerRadius="50" Opacity="0.9" Background="LightBlue">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="1">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
    </Window.Template>
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="DarkMagenta" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <Style x:Key="style1">
            <Setter Property="Control.Foreground" Value="Red" />
            <Setter Property="Control.Margin" Value="5" />
        </Style>
        <Style x:Key="style2">
            <Setter Property="Control.Background" Value="Gray" />
            <Setter Property="Control.Foreground" Value="Black" />
            <Setter Property="Control.Margin" Value="1" />
        </Style>
        <Style x:Key="style3">
            <Setter Property="Control.Background">
                <Setter.Value>
                    <LinearGradientBrush>
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="Yellow" Offset="0" />
                            <GradientStop Color="Purple" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="80"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3"
        HorizontalAlignment="Center" VerticalAlignment="Stretch" />
        <GridSplitter Grid.Column="3" ShowsPreview="False" Width="3"
        HorizontalAlignment="Center" VerticalAlignment="Stretch" />
        <TextBox x:Name="name" Grid.Row="0" MaxLength="250" >Введите своё имя</TextBox>
        <TextBox x:Name="job" Grid.Row="1" MaxLength="250" >
            <TextBox.ToolTip>
                <ToolTip>
                    Например Epam, Google, Amazon, N/A
                </ToolTip>
            </TextBox.ToolTip>
            Введите своё место работы
        </TextBox>
        <StackPanel x:Name="city" Grid.Row="2" Orientation="Horizontal">
            <RadioButton x:Name="Rb_minsk" GroupName="Cities" Content="Минск" IsChecked="True" />
            <RadioButton x:Name="Rb_gomel" GroupName="Cities" Content="Гомель" />
            <RadioButton x:Name="Rb_vitebsk" GroupName="Cities" Content="Витебск" />
        </StackPanel>
        <Canvas Background="Lavender" Grid.Row="3">
            <Button x:Name="addPerson" Content="Добавить введёного пользователя" MinWidth="10" MaxWidth="250" 
                    MinHeight="5" MaxHeight="40" Background="Aquamarine"  Height="32" Width="200" 
                    Canvas.Top="30" Canvas.Left="40" Click="AddPerson"/>
        </Canvas>
        <ListBox Grid.Row="4" x:Name="AllAdded">
            <TextBlock FontWeight="Bold" TextDecorations="Underline">
                Снизу все добавленные пользователи, а слева
                <LineBreak/>
                они же по именам и индексам через binding:
            </TextBlock>
        </ListBox>
        <TextBlock x:Name="comment1" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
            binding: видим готовый вариант
            <LineBreak/>
            Делать binding для radio buttons, это, конечно,
            <LineBreak/>
            та ещё задачка)))) вроде как можно через
            <LineBreak/>
            конвертеры, но я решил упростить решение
            <LineBreak/>
            и сделал radio buttons на тригеррах
        </TextBlock>
        <ListBox x:Name="answer_to_comment1" Grid.Row="2" Grid.Column="2" Grid.RowSpan="2">
            <ListBoxItem ContentStringFormat="Name: {0}" Content="{Binding ElementName=name, Path=Text}"></ListBoxItem>
            <ListBoxItem ContentStringFormat="Job: {0}" Content="{Binding ElementName=job, Path=Text}"></ListBoxItem>
            <ListBoxItem >
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName= Rb_minsk, Path=IsChecked}" Value="True">
                                    <Setter Property="Text"
                            Value="City: Minsk" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName= Rb_gomel, Path=IsChecked}"
                             Value="True">
                                    <Setter Property="Text"
                            Value="City: Gomel" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName= Rb_vitebsk, Path=IsChecked}"
                             Value="True">
                                    <Setter Property="Text"
                            Value="City: Vitebsk" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </ListBoxItem>
        </ListBox>
        <ListView Margin="10" Name="lvDataBinding" Grid.Row="4" Grid.Column="2" />
        <ToggleButton x:Name = "tb" Grid.Row="0" Grid.Column="4" Content = "ToggleButtonForStyles"  
         Checked = "ToggleChecked" Unchecked = "ToggleUnchecked" HorizontalAlignment = "Center" 
                      Style = "{DynamicResource style1}"/>
        <Button Grid.Row="1" Grid.Column="4" x:Name="StartProgressBar" Content="CheckProgressBar" 
                Click="OpenStatusBarWindow"></Button>
        <TextBlock Grid.Row="2" Grid.Column="4">
            Хех, а вот Progress Bar вообще интересным 
            <LineBreak/>
            получился, даже не ожидал такого поведения.
            <LineBreak/>
            Стандартное будет с выравниванием влево
        </TextBlock>
    </Grid>
</Window>
